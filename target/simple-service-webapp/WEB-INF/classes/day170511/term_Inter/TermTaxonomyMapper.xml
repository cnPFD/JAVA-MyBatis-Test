<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="day170511.term_Inter.TermTaxonomyMapper">
  <resultMap id="BaseResultMap" type="day170511.term.TermTaxonomy">
    <id column="term_taxonomy_id" jdbcType="BIGINT" property="termTaxonomyId" />
    <result column="term_id" jdbcType="BIGINT" property="termId" />
    <result column="taxonomy" jdbcType="VARCHAR" property="taxonomy" />
    <result column="parent" jdbcType="BIGINT" property="parent" />
    <result column="count" jdbcType="BIGINT" property="count" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="day170511.term.TermTaxonomy">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    term_taxonomy_id, term_id, taxonomy, parent, count
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="day170511.term.TermTaxonomyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from term_taxonomy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="day170511.term.TermTaxonomyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from term_taxonomy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from term_taxonomy
    where term_taxonomy_id = #{termTaxonomyId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from term_taxonomy
    where term_taxonomy_id = #{termTaxonomyId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="day170511.term.TermTaxonomyExample">
    delete from term_taxonomy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="day170511.term.TermTaxonomy">
    <selectKey keyProperty="termTaxonomyId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into term_taxonomy (term_id, taxonomy, parent,count,description)
    values (#{termId,jdbcType=BIGINT}, #{taxonomy,jdbcType=VARCHAR}, #{parent,jdbcType=BIGINT}, 
      #{count,jdbcType=BIGINT}, #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="day170511.term.TermTaxonomy">
    <selectKey keyProperty="termTaxonomyId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into term_taxonomy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="termId != null">
        term_id,
      </if>
      <if test="taxonomy != null">
        taxonomy,
      </if>
      <if test="parent != null">
        parent,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="termId != null">
        #{termId,jdbcType=BIGINT},
      </if>
      <if test="taxonomy != null">
        #{taxonomy,jdbcType=VARCHAR},
      </if>
      <if test="parent != null">
        #{parent,jdbcType=BIGINT},
      </if>
      <if test="count != null">
        #{count,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="day170511.term.TermTaxonomyExample" resultType="java.lang.Long">
    select count(*) from term_taxonomy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update term_taxonomy
    <set>
      <if test="record.termTaxonomyId != null">
        term_taxonomy_id = #{record.termTaxonomyId,jdbcType=BIGINT},
      </if>
      <if test="record.termId != null">
        term_id = #{record.termId,jdbcType=BIGINT},
      </if>
      <if test="record.taxonomy != null">
        taxonomy = #{record.taxonomy,jdbcType=VARCHAR},
      </if>
      <if test="record.parent != null">
        parent = #{record.parent,jdbcType=BIGINT},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=BIGINT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update term_taxonomy
    set term_taxonomy_id = #{record.termTaxonomyId,jdbcType=BIGINT},
      term_id = #{record.termId,jdbcType=BIGINT},
      taxonomy = #{record.taxonomy,jdbcType=VARCHAR},
      parent = #{record.parent,jdbcType=BIGINT},
      count = #{record.count,jdbcType=BIGINT},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update term_taxonomy
    set term_taxonomy_id = #{record.termTaxonomyId,jdbcType=BIGINT},
      term_id = #{record.termId,jdbcType=BIGINT},
      taxonomy = #{record.taxonomy,jdbcType=VARCHAR},
      parent = #{record.parent,jdbcType=BIGINT},
      count = #{record.count,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="day170511.term.TermTaxonomy">
    update term_taxonomy
    <set>
      <if test="termId != null">
        term_id = #{termId,jdbcType=BIGINT},
      </if>
      <if test="taxonomy != null">
        taxonomy = #{taxonomy,jdbcType=VARCHAR},
      </if>
      <if test="parent != null">
        parent = #{parent,jdbcType=BIGINT},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where term_taxonomy_id = #{termTaxonomyId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="day170511.term.TermTaxonomy">
    update term_taxonomy
    set term_id = #{termId,jdbcType=BIGINT},
      taxonomy = #{taxonomy,jdbcType=VARCHAR},
      parent = #{parent,jdbcType=BIGINT},
      count = #{count,jdbcType=BIGINT},
      description = #{description,jdbcType=LONGVARCHAR}
    where term_taxonomy_id = #{termTaxonomyId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="day170511.term.TermTaxonomy">
    update term_taxonomy
    set term_id = #{termId,jdbcType=BIGINT},
      taxonomy = #{taxonomy,jdbcType=VARCHAR},
      parent = #{parent,jdbcType=BIGINT},
      count = #{count,jdbcType=BIGINT}
    where term_taxonomy_id = #{termTaxonomyId,jdbcType=BIGINT}
  </update>
</mapper>